{
  "openapi": "3.0.0",
  "info": {
    "title": "Auth Service",
    "version": "1.0.0",
    "description": "Authentication service",
    "license": {
      "name": "ISC",
      "url": "https://github.com/sourabh-singh-rawat/issue-tracker/blob/master/LICENSE"
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": { "type": "apiKey", "in": "cookie", "name": "accessToken" }
    },
    "schemas": {
      "def-0": {
        "type": "string",
        "minLength": 1,
        "maxLength": 80,
        "format": "email",
        "default": "Sourabh.rawatcc@gmail.com",
        "title": "emailSchema"
      }
    }
  },
  "paths": {
    "/api/v1/identity/generate-tokens": {
      "post": {
        "operationId": "generateTokens",
        "summary": "Generate Tokens",
        "tags": ["identity"],
        "description": "Validate credentials and generate tokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": { "type": "string" },
            "in": "header",
            "name": "Cookie",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "type": "string", "description": "Unauthorized" }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/refresh-tokens": {
      "post": {
        "operationId": "refreshTokens",
        "summary": "Create new accessToken",
        "description": "If refresh token is valid, generate new access and refresh tokens",
        "parameters": [
          {
            "schema": { "type": "string" },
            "in": "header",
            "name": "Cookie",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "type": "string", "description": "Unauthorized" }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/revoke-tokens": {
      "post": {
        "operationId": "revokeTokens",
        "summary": "Revoke Tokens",
        "description": "Revoke all the tokens",
        "parameters": [
          {
            "schema": { "type": "string" },
            "in": "header",
            "name": "Cookie",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "type": "string", "description": "Unauthorized" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/register": {
      "post": {
        "operationId": "registerUser",
        "summary": "Register a new user",
        "tags": ["user"],
        "description": "Register a new user with email, password and display name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "minLength": 1 },
                  "password": { "type": "string", "minLength": 1 },
                  "displayName": { "type": "string", "minLength": 1 }
                },
                "required": ["email", "password", "displayName"]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": { "type": "string" },
            "in": "query",
            "name": "workspaceInviteToken",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "type": "string", "description": "Unauthorized" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "operationId": "getCurrentUser",
        "summary": "Get current user",
        "tags": ["identity"],
        "description": "Get the current user details if logged in",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": { "type": "string" },
                    "displayName": { "type": "string" },
                    "email": { "$ref": "#/components/schemas/def-0" },
                    "emailVerificationStatus": { "type": "string" },
                    "createdAt": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "type": "string", "description": "Unauthorized" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/confirm": {
      "get": {
        "operationId": "verifyEmail",
        "summary": "Verify user email",
        "tags": ["users"],
        "description": "Verify user email",
        "parameters": [
          {
            "schema": { "type": "string" },
            "in": "query",
            "name": "confirmationEmail",
            "required": true
          },
          {
            "schema": { "type": "string" },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Email token is verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Email token is verified successfully",
                  "type": "object",
                  "properties": { "confirmation": { "type": "boolean" } }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "type": "string", "description": "Unauthorized" }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    { "url": "https://localhost:443", "description": "development server" }
  ],
  "security": [],
  "tags": [{ "name": "user", "description": "User related end-points" }]
}
