{
  "openapi": "3.1.0",
  "info": {
    "title": "Issue Tracker API",
    "version": "1.0.0",
    "description": "API for describing various endpoints of issue tracker",
    "license": {
      "name": "ISC",
      "url": "https://github.com/sourabh-singh-rawat/issue-tracker/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://localhost:443/api/v1"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "activity",
      "description": "Activity service"
    },
    {
      "name": "identity",
      "description": "Authentication functionalities."
    },
    {
      "name": "issue",
      "description": "Create and manage issues"
    },
    {
      "name": "project",
      "description": "Create and manage projects"
    },
    {
      "name": "user",
      "description": "User management"
    },
    {
      "name": "workspace",
      "description": "Create and manage workspaces"
    }
  ],
  "paths": {
    "/issue-tracker/activities/projects/{id}": {
      "description": "Get project activity list",
      "get": {
        "tags": [
          "issue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get a list of all project activities",
        "description": "Get project activities for a given project",
        "operationId": "getProjectActivityList",
        "responses": {
          "200": {
            "description": "Get project activities for a given project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachments/issues/{id}": {
      "description": "Create and manage issue attachments",
      "post": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The numeric Id of the issue",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "attachment"
        ],
        "operationId": "createIssueAttachment",
        "summary": "Create a new issue attachment",
        "description": "Create a new issue attachment",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a new issue attachment"
          },
          "400": {
            "description": "The request contains invalid body paramaters"
          },
          "401": {
            "description": "User credentials are invalid"
          },
          "403": {
            "description": "User may be blocked"
          },
          "429": {
            "description": "User is blocked for sending too many request"
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The numeric Id of the issue",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "attachment"
        ],
        "operationId": "getIssueAttachmentList",
        "summary": "Get issue attachment list",
        "description": "Get issue attachment list",
        "responses": {
          "200": {
            "description": "List of issue attachments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array"
                    },
                    "filteredRowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request contains invalid body paramaters"
          }
        }
      }
    },
    "/auth/identity/generate-tokens": {
      "description": "Generate access and refresh tokens",
      "post": {
        "operationId": "generateTokens",
        "tags": [
          "identity"
        ],
        "summary": "Generate tokens",
        "description": "Validates credentials, generates tokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 80,
                    "format": "email",
                    "default": "Sourabh.rawatcc@gmail.com",
                    "errorMessage": "\"email\" is not allowed to be empty and should be valid"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!])(?!.*\\s).{8,}$",
                    "default": "",
                    "errorMessage": "\"password\" must contain at least one lowercase letter, one uppercase letter, one digit, one special character (@#$%^&+=!), and must be at least 8 characters long with no spaces."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "accessToken and refreshTokens are successfully generated.",
            "headers": {
              "Set-Cookie": {
                "description": "The cookie with accessToken and refreshToken",
                "schema": {
                  "type": "string"
                },
                "example": "accessToken=[jwt_token]; refreshToken=[jwt_token_2]"
              }
            }
          },
          "400": {
            "description": "The request contains invalid body paramaters"
          },
          "401": {
            "description": "User credentials are invalid"
          },
          "403": {
            "description": "User may be blocked"
          },
          "429": {
            "description": "User is blocked for sending too many request"
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/identity/refresh-tokens": {
      "description": "If refresh token is valid, generate new access and refresh tokens",
      "post": {
        "operationId": "refreshTokens",
        "tags": [
          "identity"
        ],
        "summary": "Refresh Tokens",
        "description": "If refresh token is valud, generates new tokens",
        "responses": {
          "200": {
            "description": "new accessToken token is successfully created",
            "headers": {
              "Set-Cookie": {
                "description": "The cookie with accessToken and refreshToken",
                "schema": {
                  "type": "string"
                },
                "example": "accessToken=[jwt_token]; refreshToken=[jwt_token_2]"
              }
            }
          },
          "400": {
            "description": "BadRequest, the provided token was not in correct format"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Request"
          },
          "500": {
            "description": "Internal Server Error - An unexpected server error occured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/identity/revoke-tokens": {
      "description": "Revokes the token from cookie and database",
      "post": {
        "operationId": "revokeTokens",
        "tags": [
          "identity"
        ],
        "summary": "Removes the tokens",
        "description": "Removes the access tokens and refresh tokens",
        "responses": {
          "200": {
            "description": "Tokens were successfully removed"
          },
          "401": {
            "description": "Unauthorized - The user is not authenticated"
          },
          "500": {
            "description": "Internal Server Error - An unexpected server error occured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues": {
      "description": "Create and get issues",
      "get": {
        "tags": [
          "issue"
        ],
        "summary": "Gets a list of issues",
        "description": "Gets a list of issues",
        "operationId": "getIssueList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "created_at"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of issues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assignees": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "displayName"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "user"
                              ]
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "createdById": {
                            "type": "string"
                          },
                          "deletedAt": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 3000,
                            "default": ""
                          },
                          "dueDate": {
                            "anyOf": [
                              {
                                "type": "string",
                                "format": "date"
                              },
                              {
                                "type": "string",
                                "maxLength": 0
                              }
                            ]
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "priority": {
                            "type": "string"
                          },
                          "priorityList": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "project": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "reporter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "displayName"
                            ]
                          },
                          "resolution": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "assignees",
                          "createdAt",
                          "deletedAt",
                          "description",
                          "dueDate",
                          "id",
                          "name",
                          "priority",
                          "priorityList",
                          "project",
                          "reporter",
                          "resolution"
                        ]
                      }
                    },
                    "filteredRowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "filteredRowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "issue"
        ],
        "summary": "Create a new issue",
        "description": "Create a new issue",
        "operationId": "createIssue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  },
                  "status": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string"
                  },
                  "resolution": {
                    "type": "boolean",
                    "default": false
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "assignees": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "reporter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  },
                  "dueDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "assignees"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issue created successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/status": {
      "description": "Get a list of issue statuses",
      "get": {
        "tags": [
          "issue"
        ],
        "summary": "Get a list of all issue statuses",
        "description": "Get issue statuses",
        "operationId": "getIssueStatusList",
        "responses": {
          "200": {
            "description": "Get issue status list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/priority": {
      "description": "Get a list of issue priorities",
      "get": {
        "tags": [
          "issue"
        ],
        "summary": "Get a list of all issue priority",
        "description": "Get issue priorities",
        "operationId": "getIssuePriorityList",
        "responses": {
          "200": {
            "description": "Get issue priority list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}": {
      "description": "Get or update a issue",
      "get": {
        "tags": [
          "issue"
        ],
        "summary": "Gets a Issue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue to get"
          }
        ],
        "operationId": "getIssue",
        "responses": {
          "200": {
            "description": "Returns the issue if it exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "createdById": {
                      "type": "string"
                    },
                    "deletedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 3000,
                      "default": ""
                    },
                    "dueDate": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "priority": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "reporterId": {
                      "type": "string"
                    },
                    "resolution": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "issue"
        ],
        "summary": "Updates the issue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue to get"
          }
        ],
        "operationId": "updateIssue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  },
                  "status": {
                    "type": "string",
                    "default": "Not Started"
                  },
                  "priority": {
                    "type": "string",
                    "default": "Lowest"
                  },
                  "resolution": {
                    "type": "boolean"
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "assignees": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "reportedId": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  },
                  "dueDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates the issue"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}/status": {
      "description": "Get or update an issue status",
      "patch": {
        "tags": [
          "issue"
        ],
        "summary": "Updates the issue status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue to get"
          }
        ],
        "operationId": "updateIssueStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "default": "Not Started"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update issue status successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}/resolution": {
      "description": "Get or update an issue resolution",
      "patch": {
        "tags": [
          "issue"
        ],
        "summary": "Updates the issue resolution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue to get"
          }
        ],
        "operationId": "updateIssueResolution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resolution": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update issue resolution successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}/comments": {
      "description": "Get comments or create a new comment",
      "post": {
        "tags": [
          "issue",
          "comment"
        ],
        "summary": "Create a new issue comment",
        "description": "Create a new issue comment",
        "operationId": "createIssueComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue in which the comment will be created"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The comment has been created successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "issue"
        ],
        "summary": "Gets list of all issue comments",
        "description": "Gets list of all issues comments",
        "operationId": "getIssueCommentList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue who's comments will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the issue comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array"
                    },
                    "filteredRowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "filteredRowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}/comments/{commentId}": {
      "description": "Delete a comment",
      "delete": {
        "tags": [
          "issue",
          "comment"
        ],
        "summary": "Delete a comment",
        "description": "Delete a comment",
        "operationId": "deleteIssueComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the issue in which the comment will be created"
          },
          {
            "name": "commentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the comment"
          }
        ],
        "responses": {
          "201": {
            "description": "The comment has been created successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}/tasks": {
      "description": "Create and gets issue tasks",
      "get": {
        "tags": [
          "issue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Gets all tasks in an issue",
        "description": "Gets all tasks in an issue",
        "operationId": "getIssueTaskList",
        "responses": {
          "200": {
            "description": "Issue task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array"
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "issue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create a new issue task",
        "description": "Create a new issue task",
        "operationId": "createIssueTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  },
                  "completed": {
                    "type": "boolean",
                    "default": false
                  },
                  "dueDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  }
                },
                "required": [
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issue task created successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/issues/{id}/tasks/{taskId}": {
      "description": "Get or update a issue task",
      "patch": {
        "tags": [
          "issue"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Numeric id of the issue",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Numeric id of the task",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Updates an issue task",
        "description": "Updates an issue task",
        "operationId": "updateIssueTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  },
                  "completed": {
                    "type": "boolean",
                    "default": false
                  },
                  "dueDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  }
                },
                "required": [
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issue task created successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects": {
      "description": "Create and get projects",
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get all projects",
        "description": "Get all the projects created by a user or associated with them",
        "operationId": "getProjectList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "created_at"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All the projects created by a user or associated with them",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "default": "",
                            "errorMessage": "\"name\" is not allowed to be empty"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 3000,
                            "default": ""
                          },
                          "status": {
                            "type": "string",
                            "default": "Not Started"
                          },
                          "ownerUserId": {
                            "type": "string"
                          },
                          "workspaceId": {
                            "type": "string"
                          },
                          "startDate": {
                            "anyOf": [
                              {
                                "type": "string",
                                "format": "date"
                              },
                              {
                                "type": "string",
                                "maxLength": 0
                              }
                            ]
                          },
                          "endDate": {
                            "anyOf": [
                              {
                                "type": "string",
                                "format": "date"
                              },
                              {
                                "type": "string",
                                "maxLength": 0
                              }
                            ]
                          }
                        }
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "summary": "Create a new project",
        "description": "Create a new project",
        "operationId": "createProject",
        "requestBody": {
          "description": "Fields used for creating a new project",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  },
                  "startDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  },
                  "endDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  },
                  "status": {
                    "type": "string",
                    "default": "Not Started"
                  }
                },
                "required": [
                  "name",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "rows"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects/status": {
      "description": "Get a list of project statuses",
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get list of all project statuses available",
        "description": "Get project statuses",
        "operationId": "getProjectStatusList",
        "responses": {
          "200": {
            "description": "Get project status list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects/{id}": {
      "description": "Update the project status",
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Gets a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the project to update"
          }
        ],
        "operationId": "getProject",
        "responses": {
          "200": {
            "description": "Projects updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "deletedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 3000,
                      "default": ""
                    },
                    "endDate": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ownerUserId": {
                      "type": "string"
                    },
                    "startDate": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "status": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "version": {
                      "type": "number"
                    },
                    "workspaceId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "createdAt",
                    "deletedAt",
                    "description",
                    "endDate",
                    "id",
                    "name",
                    "ownerUserId",
                    "startDate",
                    "status",
                    "updatedAt",
                    "version",
                    "workspaceId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "project"
        ],
        "summary": "Updates the project with new properties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Numeric id of the project to update"
          }
        ],
        "description": "Updates the project with new properties",
        "operationId": "updateProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  },
                  "status": {
                    "type": "string",
                    "default": "Not Started"
                  },
                  "startDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  },
                  "endDate": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "string",
                        "maxLength": 0
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Projects updated successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects/{id}/role": {
      "description": "Get project roles",
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get list of all project roles",
        "description": "Get project roles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getProjectRoleList",
        "responses": {
          "200": {
            "description": "Get project roles list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects/{id}/members": {
      "description": "Get project members",
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Get all project members",
        "description": "Get all project members for a given project",
        "operationId": "getProjectMembers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the project"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all project members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80,
                                "format": "email",
                                "default": "Sourabh.rawatcc@gmail.com",
                                "errorMessage": "\"email\" is not allowed to be empty and should be valid"
                              }
                            },
                            "required": [
                              "id",
                              "displayName",
                              "email"
                            ]
                          },
                          "createdAt": {
                            "type": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "format": "date"
                                },
                                {
                                  "type": "string",
                                  "maxLength": 0
                                }
                              ]
                            }
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user",
                          "createdAt",
                          "role"
                        ]
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects/{id}/members/invite": {
      "description": "Invite project member",
      "post": {
        "tags": [
          "project"
        ],
        "summary": "Invite new member",
        "description": "Invite new member to the project",
        "operationId": "createProjectInvite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the project"
          }
        ],
        "requestBody": {
          "description": "Fields used for creating a new project member",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "role",
                  "workspaceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invite created successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/projects/{id}/workspace-members": {
      "description": "Get workspace members",
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get workspace members",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Numeric id of the workspace"
          }
        ],
        "description": "Get workspaces members",
        "operationId": "getWorkspaceMemberList",
        "responses": {
          "200": {
            "description": "Returns the workspace members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/register": {
      "description": "Create or register a new user",
      "post": {
        "operationId": "registerUser",
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create a new user with email, password and display name",
        "parameters": [
          {
            "name": "inviteToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 80,
                    "format": "email",
                    "default": "Sourabh.rawatcc@gmail.com",
                    "errorMessage": "\"email\" is not allowed to be empty and should be valid"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!])(?!.*\\s).{8,}$",
                    "default": "",
                    "errorMessage": "\"password\" must contain at least one lowercase letter, one uppercase letter, one digit, one special character (@#$%^&+=!), and must be at least 8 characters long with no spaces."
                  },
                  "displayName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "Sourabh Singh Rawat"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "displayName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorization"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many request"
          }
        }
      }
    },
    "/auth/users/verify-password": {
      "description": "Verifies user password",
      "post": {
        "operationId": "verifyPassword",
        "tags": [
          "user"
        ],
        "summary": "Verify password",
        "description": "Verifies a user password with the provided email and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 80,
                    "format": "email",
                    "default": "Sourabh.rawatcc@gmail.com",
                    "errorMessage": "\"email\" is not allowed to be empty and should be valid"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!])(?!.*\\s).{8,}$",
                    "default": "",
                    "errorMessage": "\"password\" must contain at least one lowercase letter, one uppercase letter, one digit, one special character (@#$%^&+=!), and must be at least 8 characters long with no spaces."
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User password verified"
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorization"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many request"
          }
        }
      }
    },
    "/auth/users/me": {
      "description": "Gets the current logged in user",
      "get": {
        "operationId": "getCurrentUser",
        "description": "Get the current user details if logged in",
        "tags": [
          "identity"
        ],
        "summary": "Get current user",
        "responses": {
          "200": {
            "description": "Returns the current logged in user or null",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 80,
                      "format": "email",
                      "default": "Sourabh.rawatcc@gmail.com",
                      "errorMessage": "\"email\" is not allowed to be empty and should be valid"
                    },
                    "displayName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "default": "Sourabh Singh Rawat"
                    },
                    "defaultWorkspaceId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "default": "",
                      "errorMessage": "\"name\" is not allowed to be empty"
                    },
                    "defaultWorkspaceName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "default": "",
                      "errorMessage": "\"name\" is not allowed to be empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/users/default-workspace": {
      "description": "Gets the current logged in user",
      "post": {
        "tags": [
          "user",
          "project",
          "issue"
        ],
        "summary": "Sets default workspace",
        "description": "Set default workspace for the user",
        "operationId": "setDefaultWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default workspace updated successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/workspaces": {
      "description": "Create and get workspaces",
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get all workspaces",
        "description": "Get all workspaces of the user",
        "operationId": "getAllWorkspaces",
        "responses": {
          "200": {
            "description": "all workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "status",
                          "createdAt"
                        ]
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create a workspace",
        "description": "Create a new workspace to start adding projects",
        "operationId": "createWorkspace",
        "requestBody": {
          "description": "Fields used to create a workspace",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name for your workspace.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  },
                  "description": {
                    "description": "A description for your workspace.",
                    "type": "string",
                    "maxLength": 3000,
                    "default": ""
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Workspace created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/workspaces/{id}": {
      "description": "Get workspace",
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get workspace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Numeric id of the workspace to get"
          }
        ],
        "description": "Get workspace by id - Retrieve details of a workspace by its unique identifier",
        "operationId": "getWorkspace",
        "responses": {
          "200": {
            "description": "Returns the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Numeric id of the workspace to update"
          }
        ],
        "summary": "Update workspace fields",
        "description": "Update various fields of a particular workspace",
        "operationId": "updateWorkspace",
        "requestBody": {
          "description": "Fields used to update workspace",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Workspace updated successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/workspaces/invite": {
      "description": "Creates a workspace member",
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create a workspace member invite",
        "description": "Create a new workspace member invite",
        "operationId": "createWorkspaceInvite",
        "requestBody": {
          "description": "Fields used to create a new workspace member invite",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 80,
                    "format": "email",
                    "default": "Sourabh.rawatcc@gmail.com",
                    "errorMessage": "\"email\" is not allowed to be empty and should be valid"
                  },
                  "workspaceRole": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "default": "",
                    "errorMessage": "\"name\" is not allowed to be empty"
                  }
                },
                "required": [
                  "email",
                  "workspaceRole"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workspace member created"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/workspaces/{id}/members": {
      "description": "Get all workspace members",
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get all workspace members",
        "description": "Get all workspace members",
        "operationId": "getWorkspaceMembers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Numeric id of the workspace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All the workspace members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "workspaceId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "filteredRowCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issue-tracker/workspaces/role": {
      "description": "Get a list of workspace roles",
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get list of all workspace roles",
        "description": "Get all the default roles that are available in the workspace",
        "operationId": "getWorkspaceRoleList",
        "responses": {
          "200": {
            "description": "Get workspace roles list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rowCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "rows",
                    "rowCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}